#
# Binaries which copy to initramfs from your distro.
#
INSTALL_ENVIRONMENT="env"

SYSTEMWIDE_BINARIES="sh env switch_root mount umount mkdir rmdir cp mv rm cpio"

# Switch to using busybox when available...
if which busybox 1>/dev/null 2>/dev/null; then

	INSTALL_ENVIRONMENT="busybox"

	SYSTEMWIDE_BINARIES="busybox"

fi

#
# Switch colors and control codes. "auto" / "none".
#
COLOURS="auto"

#
# Colours schema, looks like in mIRC (yeah, IRC client)
#
set_color_theme() {
	mirc_colours_schema
}

############################
#                          #
#     RUNTIME LIBRARY.     #
#                          #
# DON'T TOUCH IF NOT SURE. #
#                          #
############################ 

initramfs_init() {
	echo "#! $(which $INSTALL_ENVIRONMENT) sh" >> "$1"

	cat "/etc/boobstrap/init" >> "$1"

	chmod +x "$1"
}

bootloader_conf() {
	cat <<"EOF"
function load_video {
	if [ x$feature_all_video_module = xy ]; then
		insmod all_video
	else
		insmod efi_gop
		insmod efi_uga
		insmod vbe
		insmod vga
	fi
}
if loadfont $prefix/font.pf2; then
	set gfxmode=auto
	load_video
	insmod gfxterm
	terminal_output gfxterm
	set gfxpayload=keep
	insmod png
	set theme="$prefix/themes/starfield/theme.txt"
fi
set color_normal=cyan/blue
set menu_color_normal=black/light-gray
set menu_color_highlight=white/cyan
set timeout=3
EOF
}

bootloader_menu() {
	DISTRO_NAME="GNU/Linux"
	DISTRO_KERNEL="/boot/vmlinuz"
	DISTRO_INITRD="/boot/initrd"
	DISTRO_CMDLINE="quiet"

	cat <<EOF
menuentry "Run $DISTRO_NAME in Live-mode" {
	search --no-floppy --file --set root $DISTRO_KERNEL
	linux $DISTRO_KERNEL $DISTRO_CMDLINE
	initrd $DISTRO_INITRD
}

menuentry "Boot using SHMFS (default boot)" {
	search --no-floppy --file --set root $DISTRO_KERNEL
	linux $DISTRO_KERNEL boobs.use-shmfs $DISTRO_CMDLINE
	initrd $DISTRO_INITRD
}

menuentry "Boot using Overlay FS" {
	search --no-floppy --file --set root $DISTRO_KERNEL
	linux $DISTRO_KERNEL boobs.use-overlayfs $DISTRO_CMDLINE
	initrd $DISTRO_INITRD
}

menuentry "Boot using Overlay FS (Copy to RAM and release storage device)" {
	search --no-floppy --file --set root $DISTRO_KERNEL
	linux $DISTRO_KERNEL boobs.use-overlayfs boobs.overlay-to-ram $DISTRO_CMDLINE
	initrd $DISTRO_INITRD
}

menuentry "Boot using Overlay FS (Try to find /filesystem.squashfs)" {
	search --no-floppy --file --set root $DISTRO_KERNEL
	linux $DISTRO_KERNEL boobs.use-overlayfs boobs.search-rootfs=/filesystem.squashfs $DISTRO_CMDLINE
	initrd $DISTRO_INITRD
}

menuentry "Boot using Overlay FS (Use /dev/sda as system device)" {
	search --no-floppy --file --set root $DISTRO_KERNEL
	linux $DISTRO_KERNEL boobs.use-overlayfs boobs.search-rootfs=/dev/sda $DISTRO_CMDLINE
	initrd $DISTRO_INITRD
}

menuentry "Boot using Overlay FS (Use /dev/sda as data storage)" {
	search --no-floppy --file --set root $DISTRO_KERNEL
	linux $DISTRO_KERNEL boobs.use-overlayfs boobs.overlay-cache=/dev/sda $DISTRO_CMDLINE
	initrd $DISTRO_INITRD
}
EOF
}

hi() {
	export ECHO_INDENT="$ECHO_INDENT  "
}

lo() {
	export ECHO_INDENT="${ECHO_INDENT%??}"
}

msg() {
	STDOUT=""
	STDERR=""
	fore=""
	back=""
	ctrl=""
	sgr0=""
	while test "$1"; do
		case "$1" in
			"-1")		STDOUT="yes" ;;
			"-2")		STDERR="yes" ;;
			"--foreground")	fore="$2" ; shift ;;
			"--background")	back="$2" ; shift ;;
			"--highlight")	ctrl="$ctrl$SWITCH_HIGHLIGHT" ;;
			"--bold")	ctrl="$ctrl$SWITCH_BOLD" ;;
		esac
		shift
	done
	case "$fore" in
		"00"|"0"|"White")	fore="$FOREGROUND_00" ;;
		"01"|"1"|"Black")	fore="$FOREGROUND_01" ;;
		"02"|"2"|"Blue")	fore="$FOREGROUND_02" ;;
		"03"|"3"|"Green")	fore="$FOREGROUND_03" ;;
		"04"|"4"|"Light Red")	fore="$FOREGROUND_04" ;;
		"05"|"5"|"Brown")	fore="$FOREGROUND_05" ;;
		"06"|"6"|"Purple")	fore="$FOREGROUND_06" ;;
		"07"|"7"|"Orange")	fore="$FOREGROUND_07" ;;
		"08"|"8"|"Yellow")	fore="$FOREGROUND_08" ;;
		"09"|"9"|"Light Green")	fore="$FOREGROUND_09" ;;
		"10"|"Cyan")		fore="$FOREGROUND_10" ;;
		"11"|"Light Cyan")	fore="$FOREGROUND_11" ;;
		"12"|"Light Blue")	fore="$FOREGROUND_12" ;;
		"13"|"Pink")		fore="$FOREGROUND_13" ;;
		"14"|"Grey")		fore="$FOREGROUND_14" ;;
		"15"|"Light Grey")	fore="$FOREGROUND_15" ;;
		*)			fore="$FOREGROUND_DEFAULT" ;;
	esac
	case "$back" in
		"00"|"0"|"White")	back="$BACKGROUND_00" ;;
		"01"|"1"|"Black")	back="$BACKGROUND_01" ;;
		"02"|"2"|"Blue")	back="$BACKGROUND_02" ;;
		"03"|"3"|"Green")	back="$BACKGROUND_03" ;;
		"04"|"4"|"Light Red")	back="$BACKGROUND_04" ;;
		"05"|"5"|"Brown")	back="$BACKGROUND_05" ;;
		"06"|"6"|"Purple")	back="$BACKGROUND_06" ;;
		"07"|"7"|"Orange")	back="$BACKGROUND_07" ;;
		"08"|"8"|"Yellow")	back="$BACKGROUND_08" ;;
		"09"|"9"|"Light Green")	back="$BACKGROUND_09" ;;
		"10"|"Cyan")		back="$BACKGROUND_10" ;;
		"11"|"Light Cyan")	back="$BACKGROUND_11" ;;
		"12"|"Light Blue")	back="$BACKGROUND_12" ;;
		"13"|"Pink")		back="$BACKGROUND_13" ;;
		"14"|"Grey")		back="$BACKGROUND_14" ;;
		"15"|"Light Grey")	back="$BACKGROUND_15" ;;
		*)			back="$BACKGROUND_DEFAULT" ;;
	esac
	if test "$fore$back$ctrl"; then
		sgr0="$(tput sgr0)"
	fi
	if test "$COLOURS" = "none"; then
		fore=""
		back=""
		ctrl=""
		sgr0=""
	fi
	if test "$STDOUT" = "yes"; then
		while read input; do
			echo "$ECHO_INDENT$fore$back$ctrl$input$sgr0" >&1
		done
	fi
	if test "$STDERR" = "yes"; then
		while read input; do
			echo "$ECHO_INDENT$fore$back$ctrl$input$sgr0" >&2
		done
	fi
}

mirc_colours_schema() {
	FOREGROUND_00="$(tput setaf 7)$(tput bold)"
	FOREGROUND_01="$(tput setaf 0)"
	FOREGROUND_02="$(tput setaf 4)"
	FOREGROUND_03="$(tput setaf 2)"
	FOREGROUND_04="$(tput setaf 1)$(tput bold)"
	FOREGROUND_05="$(tput setaf 1)"
	FOREGROUND_06="$(tput setaf 5)"
	FOREGROUND_07="$(tput setaf 3)"
	FOREGROUND_08="$(tput setaf 3)$(tput bold)"
	FOREGROUND_09="$(tput setaf 2)$(tput bold)"
	FOREGROUND_10="$(tput setaf 6)"
	FOREGROUND_11="$(tput setaf 6)$(tput bold)"
	FOREGROUND_12="$(tput setaf 4)$(tput bold)"
	FOREGROUND_13="$(tput setaf 5)$(tput bold)"
	FOREGROUND_14="$(tput setaf 0)$(tput bold)"
	FOREGROUND_15="$(tput setaf 7)"
	FOREGROUND_DEFAULT="$FOREGROUND_03"

	BACKGROUND_00="$(tput setab 7)$(tput bold)"
	BACKGROUND_01="$(tput setab 0)"
	BACKGROUND_02="$(tput setab 4)"
	BACKGROUND_03="$(tput setab 2)"
	BACKGROUND_04="$(tput setab 1)$(tput bold)"
	BACKGROUND_05="$(tput setab 1)"
	BACKGROUND_06="$(tput setab 5)"
	BACKGROUND_07="$(tput setab 3)"
	BACKGROUND_08="$(tput setab 3)$(tput bold)"
	BACKGROUND_09="$(tput setab 2)$(tput bold)"
	BACKGROUND_10="$(tput setab 6)"
	BACKGROUND_11="$(tput setab 6)$(tput bold)"
	BACKGROUND_12="$(tput setab 4)$(tput bold)"
	BACKGROUND_13="$(tput setab 5)$(tput bold)"
	BACKGROUND_14="$(tput setab 0)$(tput bold)"
	BACKGROUND_15="$(tput setab 7)"
	BACKGROUND_DEFAULT=""

	SWITCH_OFF="$(tput sgr0)"
	SWITCH_BOLD="$(tput bold)"
	SWITCH_UNDERLINE_ON="$(tput smul)"
	SWITCH_UNDERLINE_OFF="$(tput rmul)"
	SWITCH_HIGHLIGHT="$(tput blink)"
	SWITCH_REVERSE="$(tput rev)"
	SWITCH_DEFAULT=""
}
