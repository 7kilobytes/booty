#
# Default shell for initramfs.
#
SHELL="sh"

#
# Binaries which copy to initramfs from your distro.
#
SYSTEMWIDE_BINARIES="sh switch_root mount umount mkdir rmdir cp mv rm cpio"

#
# Switch colors and control codes. "auto" / "none".
#
COLOURS="auto"

#
# Colours schema, looks like in mIRC (yeah, IRC client)
#
set_color_theme() {
mirc_colours_schema
}

############################
#                          #
#     RUNTIME LIBRARY.     #
#                          #
# DON'T TOUCH IF NOT SURE. #
#                          #
############################ 

initramfs_systemwide_bin() {
echo $SYSTEMWIDE_BINARIES
}

initramfs_init() {
echo "#! $(which $SHELL) -"

cat <<"EOF"
search_media() {
	echo "Searching media"
	mkdir -p "/media"

	CDROM_DEVICES=""
	BLOCK_DEVICES=""

	while read -r x y z partition; do
		BLOCK_DEVICES="$BLOCK_DEVICES $partiton"
	done < "/proc/partitions"

	for dev in $CDROM_DEVICES $BLOCK_DEVICES; do
		echo "In $dev"
		mount -r "/dev/$dev" "/media" 2>/dev/null
		if test "$?" = "0"; then
			if test -d "/media/system"; then
				echo "Yes"
				return 0
			fi
			umount "/media"
		fi
	done
	echo "Fallback to initramfs"
}

run_overlays() {
	echo "Run overlays"
	lowerdir="/mnt/overlay/lower"
	upperdir="/mnt/overlay/upper"
	workdir="/mnt/overlay/work"

	mkdir -p "/mnt/overlay"
	mount -t tmpfs -o size="100%" tmpfs "/mnt/overlay"

	mkdir -p "$lowerdir"
	mkdir -p "$upperdir"
	mkdir -p "$workdir"

	for overlay in "/media/system/"*; do
		source="$overlay"
		target="/mnt/overlay/${overlay##*/}"
		echo "Overlay $overlay"
		case "$overlay" in
			*".SquashFS") run_squashfs_overlay "$source" "$target" ; CODE="$?" ;;
			*".CPIO") run_cpio_overlay "$source" "$target" ; CODE="$?" ;;
			*) run_directory_overlay "$source" "$target" ; CODE="$?" ;;
		esac
		if test "$CODE" = "0"; then
			lowerdir="$target:$lowerdir"
		else
			echo "$overlay ERROR"
		fi
	done

	echo "Install merged tmpfs as rootfs"
	mount -t overlay -o lowerdir="$lowerdir",upperdir="$upperdir",workdir="$workdir" overlay "$1"
}

run_squashfs_overlay() {
	source="$1"
	target="$2"

	mkdir -p "$target"
	mount -t squashfs -o ro "$source" "$target" || return 1

	return 0
}

run_cpio_overlay() {
	echo Nothing here.
}

run_directory_overlay() {
	source="$1"
	target="$2"

	mkdir -p "$target"
	mv "$source/"* "$target"

	return 0
}

next_newroot() {
	echo "Install rootfs as merged tmpfs"

	mkdir -p "$1"
	mount -t tmpfs tmpfs "$1"
}

main() {
	echo "Install /proc /sys /dev /run"

	mount -t proc none /proc
	mount -t sysfs none /sys
	mount -t devtmpfs none /dev
	mount -t tmpfs none /run

	search_media

	next_newroot "/mnt/merged"

	run_overlays "/mnt/merged"

	echo "Uninstall /proc /sys /dev /run"

	umount /proc
	umount /sys
	umount /dev
	umount /run

	echo "Switch rootfs to merged tmpfs"

	exec switch_root "/mnt/merged" "/sbin/init"
}

export PATH="/sbin:/usr/sbin:/bin:/usr/bin"

main "$@"
EOF
}

bootloader_conf() {
	cat <<"EOF"
function load_video {
	if [ x$feature_all_video_module = xy ]; then
		insmod all_video
	else
		insmod efi_gop
		insmod efi_uga
		insmod vbe
		insmod vga
	fi
}
if loadfont $prefix/font.pf2; then
	set gfxmode=auto
	load_video
	insmod gfxterm
	terminal_output gfxterm
	set gfxpayload=keep
	insmod png
	set theme="$prefix/themes/starfield/theme.txt"
fi
set color_normal=cyan/blue
set menu_color_normal=black/light-gray
set menu_color_highlight=white/cyan
set timeout=3
EOF
}

bootloader_menu() {
DISTRO_NAME="GNU/Linux"
DISTRO_KERNEL="/boot/vmlinuz"
DISTRO_INITRD="/boot/initrd"
DISTRO_CMDLINE=""

	cat <<EOF
menuentry "GNU/Linux" {
	search --no-floppy --file --set root $DISTRO_KERNEL
	linux $DISTRO_KERNEL $DISTRO_CMDLINE
	initrd $DISTRO_INITRD
}
EOF
}

mirc_colours_schema() {
FOREGROUND_00="$(tput setaf 7)$(tput bold)"
FOREGROUND_01="$(tput setaf 0)"
FOREGROUND_02="$(tput setaf 4)"
FOREGROUND_03="$(tput setaf 2)"
FOREGROUND_04="$(tput setaf 1)$(tput bold)"
FOREGROUND_05="$(tput setaf 1)"
FOREGROUND_06="$(tput setaf 5)"
FOREGROUND_07="$(tput setaf 3)"
FOREGROUND_08="$(tput setaf 3)$(tput bold)"
FOREGROUND_09="$(tput setaf 2)$(tput bold)"
FOREGROUND_10="$(tput setaf 6)"
FOREGROUND_11="$(tput setaf 6)$(tput bold)"
FOREGROUND_12="$(tput setaf 4)$(tput bold)"
FOREGROUND_13="$(tput setaf 5)$(tput bold)"
FOREGROUND_14="$(tput setaf 0)$(tput bold)"
FOREGROUND_15="$(tput setaf 7)"
FOREGROUND_DEFAULT="$FOREGROUND_03"

BACKGROUND_00="$(tput setab 7)$(tput bold)"
BACKGROUND_01="$(tput setab 0)"
BACKGROUND_02="$(tput setab 4)"
BACKGROUND_03="$(tput setab 2)"
BACKGROUND_04="$(tput setab 1)$(tput bold)"
BACKGROUND_05="$(tput setab 1)"
BACKGROUND_06="$(tput setab 5)"
BACKGROUND_07="$(tput setab 3)"
BACKGROUND_08="$(tput setab 3)$(tput bold)"
BACKGROUND_09="$(tput setab 2)$(tput bold)"
BACKGROUND_10="$(tput setab 6)"
BACKGROUND_11="$(tput setab 6)$(tput bold)"
BACKGROUND_12="$(tput setab 4)$(tput bold)"
BACKGROUND_13="$(tput setab 5)$(tput bold)"
BACKGROUND_14="$(tput setab 0)$(tput bold)"
BACKGROUND_15="$(tput setab 7)"
BACKGROUND_DEFAULT=""

SWITCH_OFF="$(tput sgr0)"
SWITCH_BOLD="$(tput bold)"
SWITCH_UNDERLINE_ON="$(tput smul)"
SWITCH_UNDERLINE_OFF="$(tput rmul)"
SWITCH_HIGHLIGHT="$(tput blink)"
SWITCH_REVERSE="$(tput rev)"
SWITCH_DEFAULT=""
}
