#! /usr/bin/env sh

kernel_release() {
	KERNEL_NAME="linux"
	KERNEL_VERSION="5.4.24"
	KERNEL_PACKAGE="$PWD/kernel/$KERNEL_NAME#$KERNEL_VERSION-1.pkg.tar.xz"

	mkdir -p "$PWD/kernel"

	cd `newkernel $KERNEL_VERSION`

	make mrproper

	make defconfig

	make kvmconfig

	# Virtualization
	scripts/config -m KVM
	scripts/config -m KVM_INTEL
	scripts/config -m KVM_AMD

	# SquashFS + OverlayFS
	scripts/config -e OVERLAY_FS

	scripts/config -e SQUASHFS
	scripts/config -e SQUASHFS_XZ

	# Sound
	scripts/config -e SND_HDA_INPUT_BEEP
	scripts/config -e SND_HDA_PATCH_LOADER
	scripts/config -e SND_HDA_CODEC_REALTEK
	scripts/config -e SND_HDA_CODEC_HDMI
	scripts/config -e SND_USB_AUDIO

	# AMD GPU
	scripts/config -m DRM_AMDGPU
	scripts/config -e DRM_AMD_ACP

	# nVidia GPU
	scripts/config -m DRM_NOUVEAU

	make olddefconfig

	make -j$(nproc)

	cd `welldone`

	tar -c -v -J -f "$KERNEL_PACKAGE" .
}

os_release() {
	DIRECTORY="$1"

	mkdir -p "$PWD/cruxmedia"
	mount "$PWD/staging.iso" "$PWD/cruxmedia"

	mkbootstrap "crux_gnulinux" "$DIRECTORY/initramfs"				\
											\
		--ports "$PWD/kernel"							\
											\
		"linux"									\
											\
		--ports "$PWD/cruxmedia/crux/core"					\
											\
		"acl"			"iana-etc"		"procps"		\
		"attr"			"inetutils"		"psmisc"		\
		"bash"			"iproute2"		"rc"			\
		"bzip2"			"iptables"		"readline"		\
		"ca-certificates"	"kbd"			"sed"			\
		"coreutils"		"kmod"			"shadow"		\
		"dash"			"less"			"start-stop-daemon"	\
		"dcron"			"libcap"		"sysklogd"		\
		"dhcpcd"		"libdevmapper"		"sysvinit"		\
		"e2fsprogs"		"libgmp"		"tar"			\
		"eudev"			"libmpfr"		"tzdata"		\
		"file"			"libpcre"		"util-linux"		\
		"filesystem"		"linux-pam"		"vim"			\
		"findutils"		"lzo"			"wget"			\
		"gawk"			"ncurses"		"which"			\
		"glibc"			"openssh"		"xz"			\
		"grep"			"openssl"		"zlib"			\
		"gzip"			"pkgutils"

	echo "#! /sbin/init" > "$DIRECTORY/initramfs/init"
	chmod +x "$DIRECTORY/initramfs/init"

	#
	# remote installation via ssh
	# keep your *.pub keys in ~/.ssh while building
	#
	SERVICE_SSHD_IS="disabled"
	AUTHORIZED_KEYS="$DIRECTORY/initramfs/root/.ssh/authorized_keys"

	for key in "$HOME/.ssh/"*".pub"; do
		mkdir -p "$DIRECTORY/initramfs/root/.ssh"
		cat "$key" >> "$AUTHORIZED_KEYS"
	done

	if test -f "$AUTHORIZED_KEYS"; then
		SERVICE_SSHD_IS="enabled"
		sed -i "s/SERVICES=.*/SERVICES=(lo net crond sshd)/g" "$DIRECTORY/initramfs/etc/rc.conf"
	fi
	#
	#
	#

	cat >> "$DIRECTORY/initramfs/etc/rc.local" <<"EOF"
cat /root/issue
EOF

	cat >> "$DIRECTORY/initramfs/root/issue" <<EOF
Welcome to the CRUX GNU/Linux

Login: root
Password: any
SSH: $SERVICE_SSHD_IS

Installation notes:
# cat ~/howto

Cheers,
CRUX Team & Spoofing

EOF

	cat >> "$DIRECTORY/initramfs/root/howto" <<"EOF"
# fdisk /dev/sda
# mke2fs -t ext4 /dev/sda1
# mount /dev/sda1 /mnt

# mkdir -p /mnt/var/lib/pkg
# touch /mnt/var/lib/pkg/db

# mount /dev/sdb1 /tmp
# for port in /tmp/crux/*/* ; do pkgadd -r /mnt $port ; done
# umount /tmp

# mount -t proc proc /mnt/proc
# mount -t sys sysfs /mnt/sys
# mount -B /dev /mnt/dev
# cp /etc/resolv.conf /mnt/etc/resolv.conf

# chroot /mnt

# # echo "/dev/sda1 / ext4 defaults 0 1" >> /etc/fstab

# # grub-install /dev/sda --target=i386-pc
# # grub-mkconfig -o /boot/grub/grub.cfg

# # ports -u
# # prt-get sysup

# # exit

# umount -R /mnt

# reboot
EOF

	mkinitramfs "$DIRECTORY/initramfs"						\
											\
		--standalone								\
											\
		--output "$DIRECTORY/initramfs.img"

	xz --check="crc32" --keep --threads=0 "$DIRECTORY/initramfs.img"

	cp -r "$PWD/cruxmedia/crux" "$DIRECTORY/bootimage"
	cp -r "$PWD/kernel" "$DIRECTORY/bootimage/crux/kernel"

	install -D "$DIRECTORY/initramfs/boot/vmlinuz-"* "$DIRECTORY/bootimage/boot/vmlinuz"
	install -D "$DIRECTORY/initramfs.img.xz" "$DIRECTORY/bootimage/boot/initrd"

	mkbootisofs "$DIRECTORY/bootimage"						\
											\
		--legacy-boot "grub2"							\
											\
		--efi "grub2"								\
											\
		--output "$PWD/os.iso"

	umount "$PWD/cruxmedia"
}

main() {
	test -f "$PWD/staging.iso" || wget -q -T 5 -O "$PWD/staging.iso" "http://www.voglea.com/$(wget -O - -q http://www.voglea.com/crux/crux_gnulinux/latest-staging-amd64.txt)" || return 1

	DIR="$(mktemp -d -p $PWD)"

	for dir in bootstrap initramfs bootimage; do
		mkdir "$DIR/$dir"
	done

	kernel_release

	os_release "$DIR"
}

main "$@"
