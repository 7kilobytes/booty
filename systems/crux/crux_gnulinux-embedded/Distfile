build() {
	mkbootstrap "crux_gnulinux" "$WORK/bootstrap"					\
											\
		--ports "$PWD"								\
											\
		"linux"									\
											\
		--ports "/root/cruxmedia/crux/core"					\
											\
		"acl"			"iana-etc"		"procps"		\
		"attr"			"inetutils"		"psmisc"		\
		"bash"			"iproute2"		"rc"			\
		"bzip2"			"iptables"		"readline"		\
		"ca-certificates"	"kbd"			"sed"			\
		"coreutils"		"kmod"			"shadow"		\
		"dash"			"less"			"start-stop-daemon"	\
		"dcron"			"libcap"		"sysklogd"		\
		"dhcpcd"		"libdevmapper"		"sysvinit"		\
		"e2fsprogs"		"libgmp"		"tar"			\
		"eudev"			"libmpfr"		"tzdata"		\
		"file"			"libpcre"		"util-linux"		\
		"filesystem"		"linux-pam"		"vim"			\
		"findutils"		"lzo"			"wget"			\
		"gawk"			"ncurses"		"which"			\
		"glibc"			"openssh"		"xz"			\
		"grep"			"openssl"		"zlib"			\
		"gzip"			"pkgutils"

	install -d -m 0700 "$WORK/bootstrap/root/.ssh"

	if cd "$HOME/.ssh"; then
		for key in *".pub"; do
			cat "$key" >> "$WORK/bootstrap/root/.ssh/authorized_keys"
		done
		cd "$OLDPWD"
	fi

	sed -i "s/SERVICES=.*/SERVICES=(lo net crond sshd)/g" "$WORK/bootstrap/etc/rc.conf"

	install -D "$WORK/bootstrap/boot/vmlinuz-"* "$BOOT/boot/vmlinuz"

	mkdir -p $WORK/initramfs
	mkbootstrap "crux_gnulinux" "$WORK/initramfs"					\
											\
		--ports "$PWD"								\
											\
		"linux"
	mkinitramfs "$WORK/initramfs" --output "$BOOT/boot/initrd"

	mkbootisofs "$BOOT" --overlay "$WORK/bootstrap" --efi grub2 --legacy-boot grub2 --output "$PWD/embedded.iso"
}
