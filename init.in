#! /usr/bin/env sh

search_media() {
	echo "Searching media"
	mkdir -p "/media"

	# ANYBODY STILL USING CD-ROM?
	CDROM_DEVICES=""
	BLOCK_DEVICES=""

	while read -r x y z partition; do
		BLOCK_DEVICES="$BLOCK_DEVICES $partition"
	done < "/proc/partitions"

	for dev in $CDROM_DEVICES $BLOCK_DEVICES; do
		if test -b "/dev/$dev"; then
			echo "In $dev"
			mount -r "/dev/$dev" "/media" 2>/dev/null
			if test "$?" = "0"; then
				if test -d "$@"; then
					echo "Searching media done"
					return 0
				fi
				if test -f "$@"; then
					echo "Searching media done"
					return 0
				fi
				umount "/media"
			fi
		fi
	done

	echo "Fallback to initramfs"
	return 1
}

filesystem() {
	if test "$USE_FILESYSTEM" = "SHMFS"; then
		FILESYSTEM_MOUNT="/mnt/shm"
		mkdir -p "$FILESYSTEM_MOUNT"

		echo "Searching filesystem"
		for fs in $@; do
			if test -f "$fs"; then
				if try_filesystem "$fs" on "$FILESYSTEM_MOUNT"; then
					cp -r -f "$(catch_filesystem $f in $FILESYSTEM_MOUNT)/"* "$SWITCH_ROOTFS"
				fi
			fi
			if test -d "$fs"; then
				for f in "$fs/"*; do
					if try_filesystem "$f" on "$FILESYSTEM_MOUNT"; then
						cp -r -f "$(catch_filesystem $f in $FILESYSTEM_MOUNT)/"* "$SWITCH_ROOTFS"
					fi
				done
			fi
		done
		echo "Searching filesystem done"

		return 0
	fi
	if test "$USE_FILESYSTEM" = "OVERLAY_FS"; then
		FILESYSTEM_MOUNT="/mnt/overlay"
		mkdir -p "$FILESYSTEM_MOUNT"
		mount -t tmpfs tmpfs "$FILESYSTEM_MOUNT"

		OVERLAY_LOWERDIR=""

		OVERLAY_UPPERDIR="$FILESYSTEM_MOUNT/rootfs-changes"
		mkdir -p "$OVERLAY_UPPERDIR"
		
		OVERLAY_WORK_DIR="$FILESYSTEM_MOUNT/tmp"
		mkdir -p "$OVERLAY_WORK_DIR"

		echo "Searching filesystem"
		for fs in $@; do
			if test -f "$fs"; then
				if try_filesystem "$fs" on "$FILESYSTEM_MOUNT"; then
					OVERLAY_LOWERDIR="$(catch_filesystem $fs in $FILESYSTEM_MOUNT):$OVERLAY_LOWERDIR"
				fi
			fi
			if test -d "$fs"; then
				for f in "$fs/"*; do
					if try_filesystem "$f" on "$FILESYSTEM_MOUNT"; then
						OVERLAY_LOWERDIR="$(catch_filesystem $f in $FILESYSTEM_MOUNT):$OVERLAY_LOWERDIR"
					fi
				done
			fi
		done
		echo "Searching filesystem done"

		if test "$OVERLAY_LOWERDIR" = ""; then
			echo "No working filesystem found"
			return 1
		fi

		L="${OVERLAY_LOWERDIR%?}"
		U="$OVERLAY_UPPERDIR"
		W="$OVERLAY_WORK_DIR"

		if mount -t overlay -o lowerdir="$L",upperdir="$U",workdir="$W" rootfs "$SWITCH_ROOTFS"; then
			mkdir -p "$SWITCH_ROOTFS$FILESYSTEM_MOUNT"
			mount -o bind,ro "$FILESYSTEM_MOUNT" "$SWITCH_ROOTFS$FILESYSTEM_MOUNT"
			echo "Install merged tmpfs as rootfs"
			return 0
		fi

		echo "Check /proc/config* for CONFIG_OVERLAY_FS"
		return 1
	fi
}

try_filesystem() {
	echo "Filesystem $1"
	case "$1" in
		*".cpio")
			use_driver_cpio "$1" "$3/${1##*'/'}"
			CODE="$?"
			;;
		*".sqfs")
			use_driver_mount "$1" "$3/${1##*'/'}"
			CODE="$?"
			;;
		*)
			use_driver_copy "$1" "$3/${1##*'/'}"
			CODE="$?"
			;;
	esac
	if test "$CODE" = "0"; then
		echo "Filesystem is now on $3/${1##*'/'}"
	else
		echo "Filesystem mount failed"
	fi
}

catch_filesystem() {
	if test -d "$3/${1##*'/'}"; then
		echo "$3/${1##*'/'}"
		return 0
	fi
	return 1
}

use_driver_copy() {
	mkdir -p "$2"
	if test -d "$1"; then
		if cp -a "$1/"* "$2" 2>/dev/null; then
			return 0
		fi
	fi
	return 1
}

use_driver_cpio() {
	mkdir -p "$2"
	cd "$2"
	if cpio -i -d -H "newc" < "$1" 1>/dev/null 2>/dev/null; then
		return 0
	fi
	cd "$OLDPWD"
	return 1
}

use_driver_mount() {
	mkdir -p "$2"
	if mount "$1" "$2"; then
		return 0
	fi
	return 1
}

cheat_sheet() {
	while test "$1"; do
		case "$1" in
			"boobs.search-rootfs="*) SEARCH_ROOTFS="${1##*=}" ;;
			"boobs.copy-to-ram") COPY_TO_RAM="yes" ;;
			"boobs.use-overlayfs") USE_FILESYSTEM="OVERLAY_FS" ;;
			"boobs.use-shmfs") USE_FILESYSTEM="SHMFS" ;;
		esac
		shift
	done
}

main() {
	echo "Install /proc /sys /dev /run"

	for dir in "/sbin" "/usr/sbin" "/opt/sbin" "/bin" "/usr/bin" "/opt/bin"; do
		if test -x "$dir/busybox"; then
			$dir/busybox --install
		fi
	done

	mount -t proc none /proc
	echo "0" >/proc/sys/kernel/printk
	mount -t sysfs none /sys
	mount -t devtmpfs none /dev
	mount -t tmpfs none /run

	while read input; do
		cheat_sheet $input
	done < /proc/cmdline

	if test "$SEARCH_ROOTFS" = ""; then
		SEARCH_ROOTFS="/system/overlays"
	fi

	SEARCH_ROOTFS="/media$SEARCH_ROOTFS"

	if test "$SWITCH_ROOTFS" = ""; then
		SWITCH_ROOTFS="/mnt/merged"
		mkdir -p "$SWITCH_ROOTFS"
		mount -t tmpfs tmpfs "$SWITCH_ROOTFS"
	fi

	if test "$COPY_TO_RAM" = ""; then
		COPY_TO_RAM="no"
	fi

	if test "$USE_FILESYSTEM" = ""; then
		USE_FILESYSTEM="OVERLAY_FS"
	fi

	if test -x "$(which mdev)"; then
		mdev -s

		if search_media "$SEARCH_ROOTFS"; then
			if test "$COPY_TO_RAM" = "yes"; then
				SWITCH_NEXTFS="/mnt/toram"
				echo "Start copying system to the RAM drive"
				mkdir -p "$SWITCH_NEXTFS"
				mount -t tmpfs -o "size=100%" toram "$SWITCH_NEXTFS"
				if test -d "$SEARCH_ROOTFS"; then
					cp -r -v "$SEARCH_ROOTFS/"* "$SWITCH_NEXTFS"
				fi
				if test -f "$SEARCH_ROOTFS"; then
					SWITCH_NEXTFS="$SWITCH_NEXTFS/${SEARCH_ROOTFS%%*/}"
					cp -r -v "$SEARCH_ROOTFS" "$SWITCH_NEXTFS"
				fi
				SEARCH_ROOTFS="$SWITCH_NEXTFS"
				echo "Device can be successfully unplugged now"
				unset SWITCH_NEXTFS
			fi
		fi
	fi

	if filesystem "$SEARCH_ROOTFS"; then
		echo "Filesystem OK"
	fi

	echo "Uninstall /proc /sys /dev /run"

	umount /proc
	umount /sys
	umount /dev
	umount /run

	if test -x "$SWITCH_ROOTFS/sbin/init"; then
		echo "Switch root to merged tmpfs"
		exec switch_root "$SWITCH_ROOTFS" "/sbin/init"
	else
		echo "Where there is a shell, there is a way..."
		exec sh
	fi
}

main "$@"
